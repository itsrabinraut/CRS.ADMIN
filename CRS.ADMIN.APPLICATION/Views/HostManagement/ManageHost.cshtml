@model CRS.ADMIN.APPLICATION.Models.HostManagement.ManageHostModel
@{
    ViewBag.Title = "Host Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .select-width .select2-container {
        width: 100%;
    }

    .select2-container {
        width: 100% !important;
    }
</style>
<div class="card">
    <div class="card-header header-elements-inline">
        <h6 class="card-title">
            <b style="color:red">*</b><b> Note: Please fill out all the field stating *(Mandatory) </b>

        </h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("ManageHost", "HostManagement", FormMethod.Post, new { @id = "ManageHostForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.AgentId)
            @Html.HiddenFor(model => model.HostId)
            <fieldset class="mb-3">
                <h4>Personal Information</h4>
                <hr />
                <div class="row">
                    @Html.NTextBoxFor(model => model.HostName, new { @class = "form-control names_capitalize", maxlength = "50", autocomplete = "off", @onkeypress = "return isAlphabetWithSpace(event)", placeholder = "Enter host name" }, 3)
                    @Html.NTextBoxFor(model => model.Position, new { @class = "form-control names_capitalize", maxlength = "50", autocomplete = "off", @onkeypress = "return isAlphabateOnly(event)", placeholder = "Enter position" }, 3)
                    @Html.NTextBoxFor(model => model.Rank, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", @onkeypress = "return isNumber(event)", placeholder = "Enter rank" }, 3)
                </div>
                <hr />
                <h4>Social Links</h4>
                <hr />
                <div class="row">
                    @Html.NTextBoxFor(model => model.TwitterLink, new { @class = "form-control names_capitalize", maxlength = "512", autocomplete = "off", placeholder = "Enter twitter link" }, 3)
                    @Html.NTextBoxFor(model => model.InstagramLink, new { @class = "form-control names_capitalize", maxlength = "512", autocomplete = "off", placeholder = "Enter instagram link" }, 3)
                    @Html.NTextBoxFor(model => model.TiktokLink, new { @class = "form-control names_capitalize", maxlength = "512", autocomplete = "off", placeholder = "Enter tiktok link" }, 3)
                </div>
                <hr />
                <h4>Social Links</h4>
                <hr />
                <div class="row">
                    @Html.NTextBoxFor(model => model.DOB, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", @onkeypress = "return isNumberMinusDot(event)", placeholder = "Enter date of birth" }, 3)
                    @Html.NTextBoxFor(model => model.ConstellationGroup, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", @onkeypress = "return isAlphabateOnly(event)", placeholder = "Enter constellation group" }, 3)
                    @Html.NTextBoxFor(model => model.Height, new { @class = "form-control names_capitalize", maxlength = "5", autocomplete = "off", @onkeypress = "return isNumber(event)", placeholder = "Enter height" }, 3)

                </div>
                <div class="row">
                    @Html.NTextBoxFor(model => model.BloodType, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", placeholder = "Enter blood type" }, 3)
                    @Html.NTextBoxFor(model => model.PreviousOccupation, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", @onkeypress = "return isAlphabateOnly(event)", placeholder = "Enter previous occupation" }, 3)
                    @Html.NTextBoxFor(model => model.LiquorStrength, new { @class = "form-control names_capitalize", maxlength = "10", autocomplete = "off", @onkeypress = "return isAlphabateOnly(event)", placeholder = "Enter liquor strength" }, 3)
                </div>
                <hr />
                <div class="row">
                    <div class="col-lg-12">
                        <button type="button" class="btn btn-primary btn-sm" onclick="window.history.back();"><i class="fa fa-arrow-left "></i> Back</button>
                        <button type="button" class="btn btn-success btn-sm" id="FormSubmit"><i class="fa fas fa-save"></i> Save</button>
                    </div>
                </div>
            </fieldset>
        }
    </div>
</div>

@section scripts{
    <script>
        $("#FormSubmit").click(function () {
            $("#ManageHostForm").submit();
        });
    </script>
    <script>
        function isAlphabetWithSpace(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 32)) {
                return true;
            }
            return false;
        }
        //alphabet and whitespace
        function isAlphabateOnly(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 32)) {
                return true;
            }
            return false;
        }
        //Text and dot
        function isAlphabaticChar(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 46) || (charCode > 46 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {
                return false;
            }
            return true;
        }
        //Number Only
        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        function isNumberMinusDot(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 45 && charCode != 46) {
                return false;
            }
            return true;
        }
    </script>
}

