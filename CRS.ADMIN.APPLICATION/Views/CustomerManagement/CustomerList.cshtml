@{
    ViewBag.Title = "Customer List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var customerList = Model as CRS.ADMIN.APPLICATION.Models.CustomerManagement.CustomerListCommonModel;
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">
@Html.AntiForgeryToken()

<div class="px-8 py-4">
    <!-- title  -->
    <div class="flex flex-col  gap-6">
        <div class="flex justify-between items-center">
            <div>
                <div class="heading-title">
                    @CRS.ADMIN.APPLICATION.Resources.Resource.Customer_Management
                </div>
                <div class="span-title-light-gray">
                    @CRS.ADMIN.APPLICATION.Resources.Resource.Customer_Management_Supporting_Texts
                </div>
            </div>
        </div>
        <div id="tab1" class="tab-content-plane ">
            @Html.Partial("_CustomerList", customerList)
        </div>
    </div>

</div>


<div id="reset-passwordconfirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="reset-passwordconfirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                       @CRS.ADMIN.APPLICATION.Resources.Resource.password_reset_confirmation.
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="reset-passwordconfirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.No</div>
                        <div class="btn btn-primary w-[110px]" onclick="ResetPassword()" data-val="" id="reset_id">@CRS.ADMIN.APPLICATION.Resources.Resource.Yes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- drawer component -->
<!--<div id="customer-date"
     class="fixed top-0 right-0 z-40 h-screen px-[32px] py-[48px] overflow-y-auto transition-transform translate-x-full bg-white w-[629px] "
     tabindex="-1" aria-labelledby="drawer-right-label">

    <div class="flex items-center justify-end">
        <button type="button" data-drawer-hide="customer-date" aria-controls="customer-date" class=" ">
            <img src="~/Content/assets_new/images/drawer-close.svg" />
        </button>
    </div>-->
<!--- calender --->
<!--<div class="py-[32px] ">
        <div class="flex justify-between pb-[24px] items-center text-base font-medium">
            <div class="">
                @CRS.ADMIN.APPLICATION.Resources.Resource.Calendar
            </div>
            <div class="flex gap-[12px] items-center">
                <div class="flex h-[32px] w-[40px] justify-center items-center border border-[#D9D9D9] rounded-[4px]" id="prev-id">
                    <i class="fa-solid fa-chevron-left"></i>
                </div>
                <div class="flex text-base font-medium current-date">
                </div>
                <div class="flex h-[32px] w-[40px] justify-center items-center border border-[#D9D9D9] rounded-[4px]" id="next-id">
                    <i class="fa-solid fa-chevron-right"></i>
                </div>
            </div>

        </div>
        <div class="grid gap-[12px]">
            <div class="flex justify-between calender-card-container  grid grid-cols-7 days-class">
            </div>
        </div>
    </div>
    <div class="flex justify-end">
        <div class="flex gap-[24px]">
            <button class="btn btn-secondary ">
                @CRS.ADMIN.APPLICATION.Resources.Resource.Cancel
            </button>
            <button class="btn btn-primary">
                @CRS.ADMIN.APPLICATION.Resources.Resource.Confirm
            </button>
        </div>
    </div>
</div>-->

@section scripts{
    <script src="~/Content/assets_new/js/calendar-management.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>
    <script>


        function openResetPasswordModal(name, agentid) {
            const modalTarget = document.querySelector("[data-modal-target='reset-passwordconfirmation']");
            //const name = modalTarget.getAttribute("data-name");
            //const agentid = modalTarget.getAttribute("data-id");
            // Update modal content with a message
            const confirmationMessageElement = document.getElementById("confirmationMessage");
            // Set the message content in the modal
            confirmationMessageElement.textContent = ` ${name} , @CRS.ADMIN.APPLICATION.Resources.Resource.password_reset_confirmation ? `;
            // Open the modal
            const modal = document.getElementById("reset-passwordconfirmation");
            modal.classList.remove("hidden");
            $('#reset_id').attr('data-val', agentid);
            modal.setAttribute("aria-hidden", "false");
        }

        //function ResetPasswordEvent(id) {
        //    jsonData = "{" +
        //        "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
        //        "AgentId:'" + id + "'}";
        //    var funcText = "CallAjaxDbResponse(" + jsonData + ",'/CustomerManagement/ResetCustomerPassword','POST',true,'')";
        //    showConfirmationModal("Are you sure you want to reset this user password?", funcText);
        //}
        function BlockEvent(id) {
            var jsonData = {
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                AgentId: id
            };
            $.ajax({
                url: '/CustomerManagement/BlockCustomer',
                type: 'POST',
                data: jsonData,
                success: function (response) {
                    // Display success toast
                    showNotification(response.message, 'Success', 'SUCCESS');
                    window.location.reload();
                },
                error: function (error) {
                    // Display error toast
                    showNotification(error.responseJSON.message, 'Error', 'ERROR');
                }
            });
        }
        function UnblockEvent(id) {
            var jsonData = {
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                AgentId: id
            };

            $.ajax({
                url: '/CustomerManagement/UnBlockCustomer',
                type: 'POST',
                data: jsonData,
                success: function (response) {
                    window.location.reload();
                },
                error: function (error) {
                    window.location.reload();
                }
            });
        }
        function ResetPassword() {
            const id = $('#reset_id').attr('data-val');
            var jsonData = {
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                AgentId: id
            };

            $.ajax({
                url: '/CustomerManagement/ResetCustomerPassword',
                type: 'POST',
                data: jsonData,
                success: function (response) {
                    window.location.reload();
                },
                error: function (error) {
                    window.location.reload();
                }
            });
        }

    </script>

    <script>
        const checkbox = document.getElementById('tag1');
        const tagInput = document.getElementById('tagInput');

        if (checkbox.checked) {
            tagInput.style.display = 'block';
        }

        checkbox.addEventListener('change', function () {
            if (this.checked) {
                tagInput.style.display = 'block';
            } else {
                tagInput.style.display = 'none';
            }
        });
    </script>

    <script>
        const checkbox2 = document.getElementById('tag2');
        const tagInput2 = document.getElementById('tagInput2');

        checkbox2.addEventListener('change', function () {
            if (this.checked) {
                tagInput2.style.display = 'block';
            } else {
                tagInput2.style.display = 'none';
            }
        });
    </script>

    <script>
        // Get references to the file input and file name display element
        const fileInput = document.getElementById("file_input");
        const fileNameDisplay = document.getElementById("file_name_display");

        // Add an event listener to the file input
        fileInput.addEventListener("change", function () {
            // Check if a file has been selected
            if (fileInput.files.length > 0) {
                // Display the name of the selected file
                fileNameDisplay.textContent = `${fileInput.files[0].name}`;
            } else {
                // No file selected
                fileNameDisplay.textContent = "";
            }
        });

        function hideFilterContainerCustom() {
            var filterDiv = document.getElementById("filter");
            var filterContainer = document.getElementById("filter-container");

            // Hide the filter container
            filterContainer.style.display = "none";

            // Show the filter div
            filterDiv.style.display = "flex";

            // Add animation classes
            filterDiv.classList.add("slide-in-animation");
            $('#MobileNumber').val('');
            $('#FromDate').val('');
            $('#ToDate').val('');
            var dropdown = document.getElementById('large');
            dropdown.value = dropdown.options[0].value;
            document.getElementById("filter-id").submit();
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
                const page_size = @ViewBag.PageSize;
                const total_data = @ViewBag.TotalData;
                const start_index_val = @ViewBag.StartIndex;
                let URL = "/CustomerManagement/CustomerList";
                let user_status = $('#large').val();
                let mobile_number = $('#MobileNumber').val();
                let from_date = $('#FromDate').val();
                let to_date = $('#ToDate').val();
                let search_filter = $('#default-search').val();

                URL = addQueryParam(URL, 'FromDate', from_date);
                URL = addQueryParam(URL, 'ToDate', to_date);
                URL = addQueryParam(URL, 'Status', user_status);
                URL = addQueryParam(URL, 'MobileNumber', mobile_number);
                URL = addQueryParam(URL, 'SearchFilter', search_filter);
                LoadPagination(page_size, total_data, start_index_val, URL);

                var currentDate = new Date();
                var lastThreeMonths = new Date();
                lastThreeMonths.setMonth(currentDate.getMonth() - 3);

                 $("#FromDate").val("@customerList.FromDate");
                 jQuery(function ($) {
                     $.datepicker.regional['ja'] = {
                         closeText: '閉じる',
                         prevText: '&#x3c;前',
                         nextText: '次&#x3e;',
                         currentText: '今日',
                         monthNames: ['1月', '2月', '3月', '4月', '5月', '6月',
                             '7月', '8月', '9月', '10月', '11月', '12月'],
                         monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月',
                             '7月', '8月', '9月', '10月', '11月', '12月'],
                         dayNames: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],
                         dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],
                         dayNamesMin: ['日', '月', '火', '水', '木', '金', '土'],
                         weekHeader: '週',
                         dateFormat: 'yy/mm/dd',
                         firstDay: 0,
                         isRTL: false,
                         showMonthAfterYear: true,
                         yearSuffix: '年'
                     };
                     $.datepicker.setDefaults($.datepicker.regional['ja']);
                     $("#FromDate").datepicker({
                         minDate: lastThreeMonths,
                         maxDate: new Date(),
                         defaultDate: '@customerList.FromDate'
                     });
                 });

                $("#ToDate").val("@customerList.FromDate");
                 jQuery(function ($) {
                     $.datepicker.regional['ja'] = {
                         closeText: '閉じる',
                         prevText: '&#x3c;前',
                         nextText: '次&#x3e;',
                         currentText: '今日',
                         monthNames: ['1月', '2月', '3月', '4月', '5月', '6月',
                             '7月', '8月', '9月', '10月', '11月', '12月'],
                         monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月',
                             '7月', '8月', '9月', '10月', '11月', '12月'],
                         dayNames: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],
                         dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],
                         dayNamesMin: ['日', '月', '火', '水', '木', '金', '土'],
                         weekHeader: '週',
                         dateFormat: 'yy/mm/dd',
                         firstDay: 0,
                         isRTL: false,
                         showMonthAfterYear: true,
                         yearSuffix: '年'
                     };
                     $.datepicker.setDefaults($.datepicker.regional['ja']);
                     $("#ToDate").datepicker({
                         minDate: lastThreeMonths,
                         maxDate: new Date(),
                         defaultDate: '@customerList.ToDate'
                     });
                 });
            });
    </script>
}